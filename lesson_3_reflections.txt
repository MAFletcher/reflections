When would you want to use a remote repository rather than keeping all your work local?
You'd want to use it when you are making changes from a different computer or when another person is contributing work to your project.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
You might not be ready to move remote changes into your local repository -- especially if the remote changes were made by another person whose work you need to check.
Describe the differences between forks, clones, and branches. When would you use one instead of another?
Branches are for separating out or isolating changes you make within a repository. A clone is a copy of a repository. A fork is essentially a clone of a repository on GitHub -- usually a repository that belongs to someone else and that you don't have permission to modify. It's helpful if you want to use someone else's repository as a starting point for a project of your own, or if you want to suggest changes to the owner of the original repository.
What is the benefit of having a copy of the last known state of the remote stored locally?
If you are going offline or won't be able to reach your remote repository for a time, it can be helpful to have a local copy. For example, if you want to run git diff to see what changes are on the remote repository.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without Git or GitHub, we'd probably need to share files or send versions back and forth between collaborators. I can't think of much that would be easier in this method. But I can think of several things that would be harder. For example, it would be difficult to tell what was different between versions. It would be difficult to identify merge conflicts if two (or more!) people were working on the same file simultaneously. And it would be mindboggling to try to keep track of branches.